#pragma checksum "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5277876faf1edcb74cee261adb3fe6cc630dae67"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(InspireChallenge.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace InspireChallenge.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\_ViewImports.cshtml"
using InspireChallenge;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5277876faf1edcb74cee261adb3fe6cc630dae67", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"48c3c55334ea514173dc1d0c1711cc5bb39bb95d", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";
    DateTime localDate = DateTime.Now;

    int index = Model.counter;
    int hour = localDate.Hour;
    string timeMessage = "Good Morning";
    string widgetColor = "#fcd14d";
    if (hour >= 12 && hour < 17) { timeMessage = "Good Afternoon"; widgetColor = "#EF810E"; }
    if (hour >= 17 && hour < 22) { timeMessage = "Good Evening"; widgetColor = "#053752"; }
    if (hour >= 22 && hour < 24) { timeMessage = "Good Night"; widgetColor = "#001A26"; }
    if (hour >= 0 && hour < 6) { timeMessage = "Good Night"; widgetColor = "#001A26"; }
    string iconURL = "http://openweathermap.org/img/wn/";
    string iconType = ".png";


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<style>\r\n    body {\r\n        /* The image used */\r\n        background-image: url(");
#nullable restore
#line 23 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                          Write(Model.image.url);

#line default
#line hidden
#nullable disable
            WriteLiteral(@");
        /* Full height */
        height: 100%;
        /* Center and scale the image nicely */
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .weather button{
        margin:1px;
    }

    .widget a:link {
        text-decoration:none;
        color: white;
    }

    #drag-1, #drag-2, #drag-3 {
        width: 35%;
        min-height: 6.5em;
        margin: 1rem 0 0 1rem;
        background-color: ");
#nullable restore
#line 45 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                      Write(widgetColor);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
        color: white;
        border-radius: 0.75em;
        padding: 4%;
        touch-action: none;
        user-select: none;
        -webkit-transform: translate(0px, 0px);
        transform: translate(0px, 0px);
    }
</style>

<div class=""text-center"">

    <div class=""widget"">
        <div id=""drag-1"" class=""draggable"">
            <div class=""row weather"">
                <div class=""col"">
                    <h3 id=""set-weather"">");
#nullable restore
#line 62 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                                    Write(Model.weather.main.temp);

#line default
#line hidden
#nullable disable
            WriteLiteral("<span>&#8457;</span></h3>\r\n                    <p id=\"set-weather-min\">Low: ");
#nullable restore
#line 63 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                                            Write(Model.weather.main.temp_min);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                    <p id=\"set-weather-max\">High: ");
#nullable restore
#line 64 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                                             Write(Model.weather.main.temp_max);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <img");
            BeginWriteAttribute("src", " src=\"", 2092, "\"", 2151, 3);
#nullable restore
#line 67 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
WriteAttributeValue("", 2098, iconURL, 2098, 10, false);

#line default
#line hidden
#nullable disable
#nullable restore
#line 67 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
WriteAttributeValue("", 2108, Model.weather.weather[0].icon, 2108, 32, false);

#line default
#line hidden
#nullable disable
#nullable restore
#line 67 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
WriteAttributeValue("", 2140, iconType, 2140, 11, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n                    <p>");
#nullable restore
#line 68 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                   Write(Model.weather.weather[0].description);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</p>
                    <p><button id=""changeTempF"" class=""btn btn-light""><span>&#8457;</span></button><button id=""changeTempC"" class=""btn btn-light""><span>&#8451;</span></button></p>
                </div>
            </div>
        </div>

        <div id=""drag-2"" class=""draggable"">
            <div>
                <div id=""quote-content"">
                    ");
#nullable restore
#line 77 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
               Write(Html.Raw(Model.quotes[index].content.rendered));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </div>\r\n                <h5><i id=\"title\">- ");
#nullable restore
#line 79 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                               Write(Model.quotes[index].title.rendered);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</i></h5>
            </div>
            <button id=""updateQuote"" class=""btn btn-light"">New Quote?</button>
        </div>

        <div id=""drag-3"" class=""draggable"">
            <h5><button id=""change"" class=""btn btn-light""></button></h5>
            <h3 id=""time""></h3>
            <h5>");
#nullable restore
#line 87 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
            Write(timeMessage);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h5>
        </div>

        <div id=""drag-4"" class=""draggable"">
            <button id=""changeBackground"" class=""btn btn-light"">New Image?</button>
        </div>
    </div>
    
</div>

<script type=""text/javascript"">
    // target elements with the ""draggable"" class
    interact('.draggable')
        .draggable({
            // enable inertial throwing
            inertia: true,
            // keep the element within the area of it's parent
            modifiers: [
                interact.modifiers.restrictRect({
                    restriction: 'parent',
                    endOnly: true
                })
            ],
            // enable autoScroll
            autoScroll: true,

            listeners: {
                // call this function on every dragmove event
                move: dragMoveListener,

                // call this function on every dragend event
                //end(event) {
                //    var textEl = event.target.querySelector('p')

   ");
            WriteLiteral(@"             //    textEl && (textEl.textContent =
                //        'moved a distance of ' +
                //        (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +
                //            Math.pow(event.pageY - event.y0, 2) | 0))
                //            .toFixed(2) + 'px')
                //}
            }
        })

    function dragMoveListener(event) {
        var target = event.target
        // keep the dragged position in the data-x/data-y attributes
        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx
        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy

        // translate the element
        target.style.webkitTransform =
            target.style.transform =
            'translate(' + x + 'px, ' + y + 'px)'

        // update the posiion attributes
        target.setAttribute('data-x', x)
        target.setAttribute('data-y', y)
    }

    // this function is used later in the resizing and gesture demos");
            WriteLiteral("\n    window.dragMoveListener = dragMoveListener\r\n</script>\r\n\r\n<script>\r\n    //Global Variables\r\n    var timer;\r\n    var clockFormat;\r\n    var currentQuote = ");
#nullable restore
#line 154 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                   Write(index);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";

    /* Change Background Image */
    function updateBackground() {
        // Uses the server as a rest api to call my RandomImage function
        $.get(""?handler=RandomImage"").then(function (d) {
            $(""body"").css(""background-image"", ""url("" + d.url + "")"");
        });
    }

    $('#changeBackground').click(function () {
        updateBackground();
    });

    /* Change Temperature */
    function updateTemp(tempType) {
        // Local Variables
        var city = ""Boise"";
        var stateID = ""ID"";
        var countryID = ""US"";
        var symbol = tempType == 0 ? symbol = ""<span>&#8457;</span>"" : symbol = ""<span>&#8451;</span>"";

        // Uses the server as a rest api to call my ChangeWeather function
        $.get(""?handler=ChangeWeather"", { city: city, stateID: stateID, countryID: countryID, tempType: tempType }).then(function (d) {
            $(""#set-weather"").html(d.main.temp + symbol);
            $(""#set-weather-min"").html(""Low: "" + d.main.temp_min);
     ");
            WriteLiteral(@"       $(""#set-weather-max"").html(""High: "" + d.main.temp_max);
        });
    }
    
    $('#changeTempC').click(function () {
        updateTemp(1);
    });

    $('#changeTempF').click(function () {
        updateTemp(0);
    });

    /* Change Quote */
    function changeQuote() {
        // Local Variables
        var quotes = ");
#nullable restore
#line 195 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                 Write(Json.Serialize(Model.quotes));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n        var quoteLength = ");
#nullable restore
#line 196 "C:\Users\devan\source\repos\InspireChallenge\InspireChallenge\Pages\Index.cshtml"
                      Write(Model.quotes.Count);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";

        currentQuote++; // Increment quote index
        currentQuote = currentQuote >= quoteLength ? currentQuote = 0 : currentQuote; //Check quote length
        var quote = quotes[currentQuote];
        $('#quote-content').html(quote.content.rendered);
        $('#title').html(quote.title.rendered);
    };

    $('#updateQuote').click(function () {
        changeQuote();
    });

    /* Clock Functionality */
    function startClock(format) {
        var d = new Date();
        ap = ""am"";
        h = d.getHours();
        m = d.getMinutes();
        s = d.getSeconds();
        if (format == 0) {
            clockFormat = 0;
            if (h > 11) { ap = ""pm""; }
            if (h > 12) { h = h - 12; }
            if (h == 0) { h = 12; }
            if (m < 10) { m = ""0"" + m; }
            if (s < 10) { s = ""0"" + s; }
            $('change').html(""12 Hour Clock"");
            $('time').html(h + "":"" + m + "":"" + s + "" "" + ap);
        } else {
            clockFormat = 1;
   ");
            WriteLiteral(@"         if (m < 10) { m = ""0"" + m; }
            if (s < 10) { s = ""0"" + s; }
            $('change').html(""Military Time"");
            $('time').html(h + "":"" + m + "":"" + s);
        }

        timer = setTimeout(function () {
            startClock(format);
        }, 500);
    };

    $('#change').click(function () {
        clearInterval(timer);
        if (clockFormat == 0) {
            startClock(1);
        } else {
            startClock(0);
        }

    });

    window.onload = function () {
        startClock(0);
    };

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
